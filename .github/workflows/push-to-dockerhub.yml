name: Build, Test, and Deploy to DockerHub

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: user
          MYSQL_PASSWORD: userpassword
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '17'

    - name: Install Node dependencies
      run: npm install
      working-directory: ./node

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Node Docker image
      id: build-node
      uses: docker/build-push-action@v4
      with:
        context: ./node
        file: ./node/Dockerfile
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/super-app:node

    - name: Build PHP Docker image
      id: build-php
      uses: docker/build-push-action@v4
      with:
        context: ./php
        file: ./php/Dockerfile
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/super-app:php

    - name: Build MySQL Docker image
      id: build-mysql
      uses: docker/build-push-action@v4
      with:
        context: ./mysql
        file: ./mysql/Dockerfile
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/super-app:mysql

    - name: Test Node Container
      run: |
        docker run --rm -d --name node-container -p 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/super-app:node
        sleep 10 # Give the container some time to start
        curl -f http://localhost:3000 || exit 1
        docker stop node-container

    - name: Test PHP Docker container
      run: |
        docker run --rm -d -p 8080:80 --name php-container ${{ secrets.DOCKERHUB_USERNAME }}/super-app:php
        sleep 10 # Give the container some time to start
        curl -f http://localhost:8080/index.php || exit 1
        docker stop php-container

    - name: Test MySQL Docker container
      run: |
        docker run --rm -d -e MYSQL_ROOT_PASSWORD=rootpassword -e MYSQL_DATABASE=testdb -e MYSQL_USER=user -e MYSQL_PASSWORD=userpassword --name mysql-container ${{ secrets.DOCKERHUB_USERNAME }}/super-app:mysql
        sleep 10 # Give the container some time to start
        docker exec mysql-container mysql -uuser -puserpassword -e "SHOW DATABASES;" || exit 1
        docker stop mysql-container

    - name: Push Node Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./node
        file: ./node/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/super-app:node

    - name: Push PHP Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./php
        file: ./php/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/super-app:php

    - name: Push MySQL Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./mysql
        file: ./mysql/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/super-app:mysql
