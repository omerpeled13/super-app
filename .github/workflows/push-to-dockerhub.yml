name: Build, Test, and Deploy to DockerHub

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker Compose images
      run: |
        docker-compose -f docker-compose.yml build

    - name: Start Docker Compose services
      run: |
        docker-compose -f docker-compose.yml up -d

    - name: Test Node Container
      run: |
        docker ps -a
        sleep 10 # Give the container some time to start
        curl -f http://localhost:3000/super-app || exit 1

    - name: Test PHP Docker container
      run: |
        curl -f http://localhost:80/index.php || exit 1

    - name: Test MySQL Docker container
      run: |
        docker exec mysql-container mysql -uroot -ppassword -e "SHOW DATABASES;" || exit 1

    - name: Push MySQL Docker image
      run: |
        docker tag mysql:8.0.28 ${{ secrets.DOCKERHUB_USERNAME }}/super-app:mysql
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/super-app:mysql

    - name: Stop Docker Compose services
      run: |
        docker-compose -f docker-compose.yml down

    - name: Push Node Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./node
        file: ./node/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/super-app:node

    - name: Push PHP Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./php
        file: ./php/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/super-app:php

    - name: Push SQL Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./php
        file: ./php/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/super-app:mysql

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Create CodeDeploy Deployment
      run: |
        aws deploy create-deployment \
          --application-name peled-super-app \
          --deployment-group-name peled-super-app-dp \
          --revision "{\"revisionType\":\"GitHub\",\"gitHubLocation\":{\"repository\":\"omerpeled13/super-app\",\"commitId\":\"${{ github.sha }}\"}}"
